# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[-0.0059754, [3, -0.96, 0], [3, 0.2, 0]], [-0.0059754, [3, -0.2, 0], [3, 0.2, 0]], [-0.0059754, [3, -0.2, 0], [3, 0.2, 0]], [-0.0059754, [3, -0.2, 0], [3, 0.266667, 0]], [-0.0059754, [3, -0.266667, 0], [3, 0.32, 0]], [-0.0923321, [3, -0.32, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[0.0153609, [3, -0.96, 0], [3, 0.2, 0]], [0.0153609, [3, -0.2, 0], [3, 0.2, 0]], [0.0153609, [3, -0.2, 0], [3, 0.2, 0]], [0.0153609, [3, -0.2, 0], [3, 0.266667, 0]], [0.0153609, [3, -0.266667, 0], [3, 0.32, 0]], [0.0104907, [3, -0.32, 0], [3, 0, 0]]])

names.append("HipPitch")
times.append([2.88, 3.48, 4.08, 4.68, 5.48])
keys.append([[-0.04416, [3, -0.96, 0], [3, 0.2, 0]], [-0.04416, [3, -0.2, 0], [3, 0.2, 0]], [-0.04416, [3, -0.2, 0], [3, 0.2, 0]], [-0.04416, [3, -0.2, 0], [3, 0.266667, 0]], [-0.04416, [3, -0.266667, 0], [3, 0, 0]]])

names.append("HipRoll")
times.append([2.88, 3.48, 4.08, 4.68, 5.48])
keys.append([[-0.0041018, [3, -0.96, 0], [3, 0.2, 0]], [-0.0041018, [3, -0.2, 0], [3, 0.2, 0]], [-0.0041018, [3, -0.2, 0], [3, 0.2, 0]], [-0.0041018, [3, -0.2, 0], [3, 0.266667, 0]], [-0.0041018, [3, -0.266667, 0], [3, 0, 0]]])

names.append("KneePitch")
times.append([2.88, 3.48, 4.08, 4.68, 5.48])
keys.append([[-0.00581041, [3, -0.96, 0], [3, 0.2, 0]], [-0.00581041, [3, -0.2, 0], [3, 0.2, 0]], [-0.00581041, [3, -0.2, 0], [3, 0.2, 0]], [-0.00581041, [3, -0.2, 0], [3, 0.266667, 0]], [-0.00581041, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[-0.112496, [3, -0.96, 0], [3, 0.2, 0]], [-0.112496, [3, -0.2, 0], [3, 0.2, 0]], [-0.112496, [3, -0.2, 0], [3, 0.2, 0]], [-0.112496, [3, -0.2, 0], [3, 0.266667, 0]], [-0.112496, [3, -0.266667, 0], [3, 0.32, 0]], [-1.25987, [3, -0.32, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[-1.71465, [3, -0.96, 0], [3, 0.2, 0]], [-1.71465, [3, -0.2, 0], [3, 0.2, 0]], [-1.71465, [3, -0.2, 0], [3, 0.2, 0]], [-1.71465, [3, -0.2, 0], [3, 0.266667, 0]], [-1.71465, [3, -0.266667, 0], [3, 0.32, 0]], [-0.969616, [3, -0.32, 0], [3, 0, 0]]])

names.append("LHand")
times.append([2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[0.6942, [3, -0.96, 0], [3, 0.2, 0]], [0.6942, [3, -0.2, 0], [3, 0.2, 0]], [0.6942, [3, -0.2, 0], [3, 0.2, 0]], [0.6942, [3, -0.2, 0], [3, 0.266667, 0]], [0.6942, [3, -0.266667, 0], [3, 0.32, 0]], [0.6942, [3, -0.32, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[1.77713, [3, -0.96, 0], [3, 0.2, 0]], [1.77713, [3, -0.2, 0], [3, 0.2, 0]], [1.77713, [3, -0.2, 0], [3, 0.2, 0]], [1.77713, [3, -0.2, 0], [3, 0.266667, 0]], [1.77713, [3, -0.266667, 0], [3, 0.32, 0]], [1.33052, [3, -0.32, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[0.103651, [3, -0.96, 0], [3, 0.2, 0]], [0.103651, [3, -0.2, 0], [3, 0.2, 0]], [0.103651, [3, -0.2, 0], [3, 0.2, 0]], [0.103651, [3, -0.2, 0], [3, 0.266667, 0]], [0.103651, [3, -0.266667, 0], [3, 0.32, 0]], [0.185015, [3, -0.32, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[0.0348073, [3, -0.96, 0], [3, 0.2, 0]], [0.0348073, [3, -0.2, 0], [3, 0.2, 0]], [0.0348073, [3, -0.2, 0], [3, 0.2, 0]], [0.0348073, [3, -0.2, 0], [3, 0.266667, 0]], [0.0348073, [3, -0.266667, 0], [3, 0.32, 0]], [0.0469069, [3, -0.32, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([2.24, 2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[1.2706, [3, -0.746667, 0], [3, 0.213333, 0]], [1.13587, [3, -0.213333, 0.08071], [3, 0.2, -0.0756657]], [0.801473, [3, -0.2, 0], [3, 0.2, 0]], [1.13587, [3, -0.2, 0], [3, 0.2, 0]], [0.801473, [3, -0.2, 0], [3, 0.266667, 0]], [1.13587, [3, -0.266667, -0.0699504], [3, 0.32, 0.0839405]], [1.26315, [3, -0.32, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([2.24, 2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[0.844739, [3, -0.746667, 0], [3, 0.213333, 0]], [2.07373, [3, -0.213333, 0], [3, 0.2, 0]], [2.07373, [3, -0.2, 0], [3, 0.2, 0]], [2.07373, [3, -0.2, 0], [3, 0.2, 0]], [2.07373, [3, -0.2, 0], [3, 0.266667, 0]], [2.07373, [3, -0.266667, 0], [3, 0.32, 0]], [0.854826, [3, -0.32, 0], [3, 0, 0]]])

names.append("RHand")
times.append([2.24, 2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[0.88, [3, -0.746667, 0], [3, 0.213333, 0]], [0.969013, [3, -0.213333, 0], [3, 0.2, 0]], [0.969013, [3, -0.2, 0], [3, 0.2, 0]], [0.969013, [3, -0.2, 0], [3, 0.2, 0]], [0.969013, [3, -0.2, 0], [3, 0.266667, 0]], [0.969013, [3, -0.266667, 0], [3, 0.32, 0]], [0.870431, [3, -0.32, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([2.24, 2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[1.02625, [3, -0.746667, 0], [3, 0.213333, 0]], [1.30033, [3, -0.213333, 0], [3, 0.2, 0]], [1.30033, [3, -0.2, 0], [3, 0.2, 0]], [1.30033, [3, -0.2, 0], [3, 0.2, 0]], [1.30033, [3, -0.2, 0], [3, 0.266667, 0]], [1.30033, [3, -0.266667, 0], [3, 0.32, 0]], [1.01497, [3, -0.32, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([2.24, 2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[-0.280998, [3, -0.746667, 0], [3, 0.213333, 0]], [-0.0956734, [3, -0.213333, 0], [3, 0.2, 0]], [-0.0956734, [3, -0.2, 0], [3, 0.2, 0]], [-0.0956734, [3, -0.2, 0], [3, 0.2, 0]], [-0.0956734, [3, -0.2, 0], [3, 0.266667, 0]], [-0.0956734, [3, -0.266667, 0], [3, 0.32, 0]], [-0.299753, [3, -0.32, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([2.24, 2.88, 3.48, 4.08, 4.68, 5.48, 6.44])
keys.append([[-0.586431, [3, -0.746667, 0], [3, 0.213333, 0]], [1.34861, [3, -0.213333, 0], [3, 0.2, 0]], [1.34861, [3, -0.2, 0], [3, 0.2, 0]], [1.34861, [3, -0.2, 0], [3, 0.2, 0]], [1.34861, [3, -0.2, 0], [3, 0.266667, 0]], [1.34861, [3, -0.266667, 0], [3, 0.32, 0]], [-0.585205, [3, -0.32, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
