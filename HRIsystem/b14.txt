# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[-0.381962, [3, -0.906667, 0], [3, 0.506667, 0]], [-0.381962, [3, -0.506667, 0], [3, 0.56, 0]], [-0.381962, [3, -0.56, 0], [3, 0.546667, 0]], [-0.385029, [3, -0.546667, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[0.0214758, [3, -0.906667, 0], [3, 0.506667, 0]], [0.0214758, [3, -0.506667, 0], [3, 0.56, 0]], [0.0214758, [3, -0.56, 0], [3, 0.546667, 0]], [0.0153399, [3, -0.546667, 0], [3, 0, 0]]])

names.append("HipPitch")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[0.00460196, [3, -0.906667, 0], [3, 0.506667, 0]], [0.00460196, [3, -0.506667, 0], [3, 0.56, 0]], [0.00460196, [3, -0.56, 0], [3, 0.546667, 0]], [0.0168738, [3, -0.546667, 0], [3, 0, 0]]])

names.append("HipRoll")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[-0.0107379, [3, -0.906667, 0], [3, 0.506667, 0]], [-0.0107379, [3, -0.506667, 0], [3, 0.56, 0]], [-0.0107379, [3, -0.56, 0], [3, 0.546667, 0]], [-0.0122719, [3, -0.546667, 0], [3, 0, 0]]])

names.append("KneePitch")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[-0.00306797, [3, -0.906667, 0], [3, 0.506667, 0]], [-0.00306797, [3, -0.506667, 0], [3, 0.56, 0]], [-0.00306797, [3, -0.56, 0], [3, 0.546667, 0]], [0.0107379, [3, -0.546667, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[-0.613593, [3, -0.906667, 0], [3, 0.506667, 0]], [-0.613593, [3, -0.506667, 0], [3, 0.56, 0]], [-0.00872665, [3, -0.56, 0], [3, 0.546667, 0]], [-0.118117, [3, -0.546667, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[-2.08162, [3, -0.906667, 0], [3, 0.506667, 0]], [-2.08162, [3, -0.506667, 0], [3, 0.56, 0]], [-2.08162, [3, -0.56, 0], [3, 0.546667, 0]], [-2.08161, [3, -0.546667, 0], [3, 0, 0]]])

names.append("LHand")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[0.98, [3, -0.906667, 0], [3, 0.506667, 0]], [0.186292, [3, -0.506667, 0], [3, 0.56, 0]], [0.98, [3, -0.56, 0], [3, 0.546667, 0]], [0.681019, [3, -0.546667, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[0.7133, [3, -0.906667, 0], [3, 0.506667, 0]], [0.7133, [3, -0.506667, 0], [3, 0.56, 0]], [1.08559, [3, -0.56, -0.175946], [3, 0.546667, 0.171757]], [1.75641, [3, -0.546667, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[0.00872665, [3, -0.906667, 0], [3, 0.506667, 0]], [0.395767, [3, -0.506667, 0], [3, 0.56, 0]], [0.00872665, [3, -0.56, 0], [3, 0.546667, 0]], [0.0874369, [3, -0.546667, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[1.25937, [3, -0.906667, 0], [3, 0.506667, 0]], [1.25937, [3, -0.506667, 0], [3, 0.56, 0]], [-0.82205, [3, -0.56, 0], [3, 0.546667, 0]], [0.00455999, [3, -0.546667, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[0.61666, [3, -0.906667, 0], [3, 0.506667, 0]], [0.61666, [3, -0.506667, 0], [3, 0.56, 0]], [0.00872665, [3, -0.56, 0], [3, 0.546667, 0]], [0.115049, [3, -0.546667, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[2.08008, [3, -0.906667, 0], [3, 0.506667, 0]], [2.08008, [3, -0.506667, 0], [3, 0.56, 0]], [2.08008, [3, -0.56, 0], [3, 0.546667, 0]], [2.08315, [3, -0.546667, 0], [3, 0, 0]]])

names.append("RHand")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[0.892794, [3, -0.906667, 0], [3, 0.506667, 0]], [0.892794, [3, -0.506667, 0], [3, 0.56, 0]], [0.98, [3, -0.56, 0], [3, 0.546667, 0]], [0.682777, [3, -0.546667, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[0.705631, [3, -0.906667, 0], [3, 0.506667, 0]], [0.705631, [3, -0.506667, 0], [3, 0.56, 0]], [1.08559, [3, -0.56, -0.171547], [3, 0.546667, 0.167463]], [1.72266, [3, -0.546667, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[-0.0168738, [3, -0.906667, 0], [3, 0.506667, 0]], [-0.0168738, [3, -0.506667, 0], [3, 0.56, 0]], [-0.00872665, [3, -0.56, 0], [3, 0.546667, 0]], [-0.0705631, [3, -0.546667, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([2.72, 4.24, 5.92, 7.56])
keys.append([[-1.25946, [3, -0.906667, 0], [3, 0.506667, 0]], [-1.25946, [3, -0.506667, 0], [3, 0.56, 0]], [0.82205, [3, -0.56, 0], [3, 0.546667, 0]], [0.00609398, [3, -0.546667, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
