# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("RElbowRoll")
times.append([2.04, 2.48, 2.96, 3.44, 4.24])
keys.append([[1.11003, [3, -0.68, 0], [3, 0.146667, 0]], [1.07512, [3, -0.146667, 0], [3, 0.16, 0]], [1.11003, [3, -0.16, 0], [3, 0.16, 0]], [1.07512, [3, -0.16, 0.0349066], [3, 0.266667, -0.0581776]], [0.110447, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([2.04, 2.48, 2.96, 3.44, 4.24])
keys.append([[0.188496, [3, -0.68, 0], [3, 0.146667, 0]], [0.0610865, [3, -0.146667, 0], [3, 0.16, 0]], [0.188496, [3, -0.16, 0], [3, 0.16, 0]], [0.0610865, [3, -0.16, 0], [3, 0.266667, 0]], [1.69045, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([2.04, 2.48, 2.96, 3.44, 4.24])
keys.append([[0.404916, [3, -0.68, 0], [3, 0.146667, 0]], [0.432842, [3, -0.146667, 0], [3, 0.16, 0]], [0.404916, [3, -0.16, 0], [3, 0.16, 0]], [0.432842, [3, -0.16, -0.0279252], [3, 0.266667, 0.0465421]], [1.73186, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([2.04, 2.96, 4.24])
keys.append([[-0.331613, [3, -0.68, 0], [3, 0.306667, 0]], [-0.331613, [3, -0.306667, 0], [3, 0.426667, 0]], [-0.0736311, [3, -0.426667, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([2.04, 2.48, 2.96, 3.44, 4.24])
keys.append([[0.127409, [3, -0.68, 0], [3, 0.146667, 0]], [0.0907571, [3, -0.146667, 0], [3, 0.16, 0]], [0.127409, [3, -0.16, 0], [3, 0.16, 0]], [0.0907571, [3, -0.16, 0.0209169], [3, 0.266667, -0.0348615]], [-0.0399261, [3, -0.266667, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
