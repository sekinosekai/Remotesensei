# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[0.00689349, [3, -0.883333, 0], [3, 0.2, 0]], [0.00689349, [3, -0.2, 0], [3, 0.166667, 0]], [0.00689349, [3, -0.166667, 0], [3, 0.233333, 0]], [0.00689349, [3, -0.233333, 0], [3, 0.266667, 0]], [0.00689349, [3, -0.266667, 0], [3, 0.3, 0]], [-0.388097, [3, -0.3, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[0.0104907, [3, -0.883333, 0], [3, 0.2, 0]], [0.0104907, [3, -0.2, 0], [3, 0.166667, 0]], [0.0104907, [3, -0.166667, 0], [3, 0.233333, 0]], [0.0104907, [3, -0.233333, 0], [3, 0.266667, 0]], [0.0104907, [3, -0.266667, 0], [3, 0.3, 0]], [0.0153399, [3, -0.3, 0], [3, 0, 0]]])

names.append("HipPitch")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[-0.0426927, [3, -0.883333, 0], [3, 0.2, 0]], [-0.0426927, [3, -0.2, 0], [3, 0.166667, 0]], [-0.0426927, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.0426927, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.0426927, [3, -0.266667, 0], [3, 0.3, 0]], [-0.00613594, [3, -0.3, 0], [3, 0, 0]]])

names.append("HipRoll")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[-0.00626273, [3, -0.883333, 0], [3, 0.2, 0]], [-0.00626273, [3, -0.2, 0], [3, 0.166667, 0]], [-0.00626273, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.00626273, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.00626273, [3, -0.266667, 0], [3, 0.3, 0]], [-0.0122719, [3, -0.3, 0], [3, 0, 0]]])

names.append("KneePitch")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[-0.00581041, [3, -0.883333, 0], [3, 0.2, 0]], [-0.00581041, [3, -0.2, 0], [3, 0.166667, 0]], [-0.00581041, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.00581041, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.00581041, [3, -0.266667, 0], [3, 0.3, 0]], [0.0352817, [3, -0.3, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[-1.32834, [3, -0.883333, 0], [3, 0.2, 0]], [-1.32834, [3, -0.2, 0], [3, 0.166667, 0]], [-1.32834, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.933751, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.933751, [3, -0.266667, 0], [3, 0.3, 0]], [-0.118117, [3, -0.3, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[-1.53894, [3, -0.883333, 0], [3, 0.2, 0]], [-1.53894, [3, -0.2, 0], [3, 0.166667, 0]], [-1.31074, [3, -0.166667, -0.104174], [3, 0.233333, 0.145843]], [-0.788889, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.788889, [3, -0.266667, 0], [3, 0.3, 0]], [-1.71346, [3, -0.3, 0], [3, 0, 0]]])

names.append("LHand")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[0.948323, [3, -0.883333, 0], [3, 0.2, 0]], [0.948323, [3, -0.2, 0], [3, 0.166667, 0]], [0.62, [3, -0.166667, 0.0789338], [3, 0.233333, -0.110507]], [0.38, [3, -0.233333, 0], [3, 0.266667, 0]], [0.38, [3, -0.266667, 0], [3, 0.3, 0]], [0.668717, [3, -0.3, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[0.551521, [3, -0.883333, 0], [3, 0.2, 0]], [0.637827, [3, -0.2, -0.0806031], [3, 0.166667, 0.0671693]], [0.994838, [3, -0.166667, -0.0743103], [3, 0.233333, 0.104034]], [1.17286, [3, -0.233333, 0], [3, 0.266667, 0]], [1.13097, [3, -0.266667, 0], [3, 0.3, 0]], [1.76868, [3, -0.3, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[0.0136345, [3, -0.883333, 0], [3, 0.2, 0]], [0.00872665, [3, -0.2, 0], [3, 0.166667, 0]], [0.00872665, [3, -0.166667, 0], [3, 0.233333, 0]], [0.00872665, [3, -0.233333, 0], [3, 0.266667, 0]], [0.00872665, [3, -0.266667, 0], [3, 0.3, 0]], [0.0736311, [3, -0.3, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[0.298758, [3, -0.883333, 0], [3, 0.2, 0]], [0.298758, [3, -0.2, 0], [3, 0.166667, 0]], [0.18675, [3, -0.166667, 0], [3, 0.233333, 0]], [0.18675, [3, -0.233333, 0], [3, 0.266667, 0]], [0.18675, [3, -0.266667, 0], [3, 0.3, 0]], [0.053648, [3, -0.3, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[1.23536, [3, -0.883333, 0], [3, 0.2, 0]], [1.23536, [3, -0.2, 0], [3, 0.166667, 0]], [1.20731, [3, -0.166667, 0.0280596], [3, 0.233333, -0.0392834]], [0.738274, [3, -0.233333, 0], [3, 0.266667, 0]], [0.738274, [3, -0.266667, 0], [3, 0.3, 0]], [0.110447, [3, -0.3, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[0.678701, [3, -0.883333, 0], [3, 0.2, 0]], [0.678701, [3, -0.2, 0], [3, 0.166667, 0]], [0.678701, [3, -0.166667, 0], [3, 0.233333, 0]], [0.678701, [3, -0.233333, 0], [3, 0.266667, 0]], [0.678701, [3, -0.266667, 0], [3, 0.3, 0]], [1.69045, [3, -0.3, 0], [3, 0, 0]]])

names.append("RHand")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[0.948323, [3, -0.883333, 0], [3, 0.2, 0]], [0.948323, [3, -0.2, 0], [3, 0.166667, 0]], [0.62, [3, -0.166667, 0.0789338], [3, 0.233333, -0.110507]], [0.38, [3, -0.233333, 0], [3, 0.266667, 0]], [0.38, [3, -0.266667, 0], [3, 0.3, 0]], [0.670475, [3, -0.3, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[0.123639, [3, -0.883333, 0], [3, 0.2, 0]], [0.261445, [3, -0.2, -0.087952], [3, 0.166667, 0.0732933]], [0.607375, [3, -0.166667, -0.0693776], [3, 0.233333, 0.0971286]], [0.760963, [3, -0.233333, -0.0814487], [3, 0.266667, 0.0930842]], [1.13097, [3, -0.266667, -0.152298], [3, 0.3, 0.171335]], [1.73186, [3, -0.3, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[-0.0119614, [3, -0.883333, 0], [3, 0.2, 0]], [-0.0829558, [3, -0.2, 0], [3, 0.166667, 0]], [-0.0829558, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.0829558, [3, -0.233333, 0], [3, 0.266667, 0]], [-0.0829558, [3, -0.266667, 0], [3, 0.3, 0]], [-0.0736311, [3, -0.3, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([2.65, 3.25, 3.75, 4.45, 5.25, 6.15])
keys.append([[-0.380874, [3, -0.883333, 0], [3, 0.2, 0]], [-0.380874, [3, -0.2, 0], [3, 0.166667, 0]], [-0.380874, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.380874, [3, -0.233333, 0], [3, 0.266667, 0]], [0.605629, [3, -0.266667, 0], [3, 0.3, 0]], [-0.0399261, [3, -0.3, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
