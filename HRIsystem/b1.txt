# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([3.06667, 7.4])
keys.append([[-0.0923321, [3, -1.02222, 0], [3, 1.44444, 0]], [-0.0925025, [3, -1.44444, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([3.06667, 7.4])
keys.append([[0.0104907, [3, -1.02222, 0], [3, 1.44444, 0]], [0.0104907, [3, -1.44444, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([3.06667, 3.8, 4.8, 5.53333, 6.53333, 7.4])
keys.append([[-1.25987, [3, -1.02222, 0], [3, 0.244444, 0]], [-1.25934, [3, -0.244444, 0], [3, 0.333333, 0]], [-1.25934, [3, -0.333333, 0], [3, 0.244444, 0]], [-1.25934, [3, -0.244444, 0], [3, 0.333333, 0]], [-1.25934, [3, -0.333333, 0], [3, 0.288889, 0]], [-1.25987, [3, -0.288889, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([3.06667, 3.8, 4.8, 5.53333, 6.53333, 7.4])
keys.append([[-0.969616, [3, -1.02222, 0], [3, 0.244444, 0]], [-0.971656, [3, -0.244444, 0], [3, 0.333333, 0]], [-0.971656, [3, -0.333333, 0], [3, 0.244444, 0]], [-0.971656, [3, -0.244444, 0], [3, 0.333333, 0]], [-0.971656, [3, -0.333333, 0], [3, 0.288889, 0]], [-0.659734, [3, -0.288889, 0], [3, 0, 0]]])

names.append("LHand")
times.append([3.06667, 3.8, 4.8, 5.53333, 6.53333, 7.4])
keys.append([[0.6942, [3, -1.02222, 0], [3, 0.244444, 0]], [0.6942, [3, -0.244444, 0], [3, 0.333333, 0]], [0.6942, [3, -0.333333, 0], [3, 0.244444, 0]], [0.6942, [3, -0.244444, 0], [3, 0.333333, 0]], [0.6942, [3, -0.333333, 0], [3, 0.288889, 0]], [0.6942, [3, -0.288889, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([3.06667, 3.8, 4.8, 5.53333, 6.53333, 7.4])
keys.append([[1.33052, [3, -1.02222, 0], [3, 0.244444, 0]], [0.659611, [3, -0.244444, 0.13718], [3, 0.333333, -0.187063]], [0.357792, [3, -0.333333, 0], [3, 0.244444, 0]], [0.66497, [3, -0.244444, -0.0726084], [3, 0.333333, 0.0990115]], [0.872652, [3, -0.333333, -0.118848], [3, 0.288889, 0.103002]], [1.33052, [3, -0.288889, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([3.06667, 3.8, 4.8, 5.53333, 6.53333, 7.4])
keys.append([[0.185015, [3, -1.02222, 0], [3, 0.244444, 0]], [0.186169, [3, -0.244444, -0.00115366], [3, 0.333333, 0.00157318]], [0.60912, [3, -0.333333, -0.09879], [3, 0.244444, 0.072446]], [0.699877, [3, -0.244444, 0], [3, 0.333333, 0]], [0.409936, [3, -0.333333, 0.0919396], [3, 0.288889, -0.079681]], [0.185015, [3, -0.288889, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([3.06667, 3.8, 4.8, 5.53333, 6.53333, 7.4])
keys.append([[0.0469069, [3, -1.02222, 0], [3, 0.244444, 0]], [0.040071, [3, -0.244444, 0], [3, 0.333333, 0]], [0.040071, [3, -0.333333, 0], [3, 0.244444, 0]], [0.040071, [3, -0.244444, 0], [3, 0.333333, 0]], [0.040071, [3, -0.333333, 0], [3, 0.288889, 0]], [0.0469069, [3, -0.288889, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([3.06667, 3.8, 4.8, 5.53333, 6.53333, 7.4])
keys.append([[1.26315, [3, -1.02222, 0], [3, 0.244444, 0]], [1.2197, [3, -0.244444, 0], [3, 0.333333, 0]], [1.2197, [3, -0.333333, 0], [3, 0.244444, 0]], [1.2197, [3, -0.244444, 0], [3, 0.333333, 0]], [1.2197, [3, -0.333333, 0], [3, 0.288889, 0]], [1.18682, [3, -0.288889, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([3.06667, 3.8, 4.8, 5.53333, 6.53333, 7.4])
keys.append([[0.854826, [3, -1.02222, 0], [3, 0.244444, 0]], [0.863821, [3, -0.244444, 0], [3, 0.333333, 0]], [0.863821, [3, -0.333333, 0], [3, 0.244444, 0]], [0.863821, [3, -0.244444, 0], [3, 0.333333, 0]], [0.863821, [3, -0.333333, 0], [3, 0.288889, 0]], [0.277507, [3, -0.288889, 0], [3, 0, 0]]])

names.append("RHand")
times.append([3.06667, 3.8, 4.8, 5.53333, 6.53333, 7.4])
keys.append([[0.870431, [3, -1.02222, 0], [3, 0.244444, 0]], [0.860854, [3, -0.244444, 0], [3, 0.333333, 0]], [0.860854, [3, -0.333333, 0], [3, 0.244444, 0]], [0.860854, [3, -0.244444, 0], [3, 0.333333, 0]], [0.860854, [3, -0.333333, 0], [3, 0.288889, 0]], [0.870431, [3, -0.288889, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([3.06667, 3.8, 4.8, 5.53333, 6.53333, 7.4])
keys.append([[1.01497, [3, -1.02222, 0], [3, 0.244444, 0]], [0.659611, [3, -0.244444, 0.0926789], [3, 0.333333, -0.12638]], [0.357792, [3, -0.333333, 0], [3, 0.244444, 0]], [0.66497, [3, -0.244444, -0.0726084], [3, 0.333333, 0.0990115]], [0.872652, [3, -0.333333, -0.0624999], [3, 0.288889, 0.0541666]], [1.01497, [3, -0.288889, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([3.06667, 3.8, 4.8, 5.53333, 6.53333, 7.4])
keys.append([[-0.299753, [3, -1.02222, 0], [3, 0.244444, 0]], [-0.306543, [3, -0.244444, 0.00678933], [3, 0.333333, -0.00925818]], [-0.60912, [3, -0.333333, 0.0756412], [3, 0.244444, -0.0554702]], [-0.699877, [3, -0.244444, 0], [3, 0.333333, 0]], [-0.409936, [3, -0.333333, -0.0714507], [3, 0.288889, 0.0619239]], [-0.299753, [3, -0.288889, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([3.06667, 3.8, 4.8, 5.53333, 6.53333, 7.4])
keys.append([[-0.585205, [3, -1.02222, 0], [3, 0.244444, 0]], [-0.584963, [3, -0.244444, 0], [3, 0.333333, 0]], [-0.584963, [3, -0.333333, 0], [3, 0.244444, 0]], [-0.584963, [3, -0.244444, 0], [3, 0.333333, 0]], [-0.584963, [3, -0.333333, 0], [3, 0.288889, 0]], [-0.585205, [3, -0.288889, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
