# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("LElbowRoll")
times.append([1.92, 2.48, 3.04, 3.64, 4.24, 4.84, 5.4, 6.16])
keys.append([[-1.22173, [3, -0.64, 0], [3, 0.186667, 0]], [-1.40674, [3, -0.186667, 0], [3, 0.186667, 0]], [-0.933751, [3, -0.186667, 0], [3, 0.2, 0]], [-1.22173, [3, -0.2, 0], [3, 0.2, 0]], [-1.22173, [3, -0.2, 0], [3, 0.2, 0]], [-1.40674, [3, -0.2, 0], [3, 0.186667, 0]], [-0.933751, [3, -0.186667, -0.182229], [3, 0.253333, 0.247311]], [-0.118117, [3, -0.253333, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([1.92, 2.48, 3.04, 3.64, 4.24, 4.84, 5.4, 6.16])
keys.append([[-1.54636, [3, -0.64, 0], [3, 0.186667, 0]], [-1.54636, [3, -0.186667, 0], [3, 0.186667, 0]], [-1.54636, [3, -0.186667, 0], [3, 0.2, 0]], [-1.54636, [3, -0.2, 0], [3, 0.2, 0]], [-1.54636, [3, -0.2, 0], [3, 0.2, 0]], [-1.54636, [3, -0.2, 0], [3, 0.186667, 0]], [-1.54636, [3, -0.186667, 0], [3, 0.253333, 0]], [-1.71346, [3, -0.253333, 0], [3, 0, 0]]])

names.append("LHand")
times.append([1.92, 2.48, 3.04, 3.64, 4.24, 4.84, 5.4, 6.16])
keys.append([[0.95, [3, -0.64, 0], [3, 0.186667, 0]], [0.95, [3, -0.186667, 0], [3, 0.186667, 0]], [0.95, [3, -0.186667, 0], [3, 0.2, 0]], [0.95, [3, -0.2, 0], [3, 0.2, 0]], [0.95, [3, -0.2, 0], [3, 0.2, 0]], [0.95, [3, -0.2, 0], [3, 0.186667, 0]], [0.95, [3, -0.186667, 0], [3, 0.253333, 0]], [0.668717, [3, -0.253333, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([1.92, 2.48, 3.04, 3.64, 4.24, 4.84, 5.4, 6.16])
keys.append([[1.34739, [3, -0.64, 0], [3, 0.186667, 0]], [1.34739, [3, -0.186667, 0], [3, 0.186667, 0]], [1.34739, [3, -0.186667, 0], [3, 0.2, 0]], [1.34739, [3, -0.2, 0], [3, 0.2, 0]], [1.34739, [3, -0.2, 0], [3, 0.2, 0]], [1.34739, [3, -0.2, 0], [3, 0.186667, 0]], [1.34739, [3, -0.186667, 0], [3, 0.253333, 0]], [1.76868, [3, -0.253333, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([1.92, 2.48, 3.04, 3.64, 4.24, 4.84, 5.4, 6.16])
keys.append([[0.205949, [3, -0.64, 0], [3, 0.186667, 0]], [0.363028, [3, -0.186667, 0], [3, 0.186667, 0]], [0.205949, [3, -0.186667, 0], [3, 0.2, 0]], [0.205949, [3, -0.2, 0], [3, 0.2, 0]], [0.205949, [3, -0.2, 0], [3, 0.2, 0]], [0.363028, [3, -0.2, 0], [3, 0.186667, 0]], [0.205949, [3, -0.186667, 0.0409249], [3, 0.253333, -0.0555409]], [0.0736311, [3, -0.253333, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([1.92, 2.48, 3.04, 3.64, 4.24, 4.84, 5.4, 6.16])
keys.append([[-1.82387, [3, -0.64, 0], [3, 0.186667, 0]], [-1.82387, [3, -0.186667, 0], [3, 0.186667, 0]], [-1.82387, [3, -0.186667, 0], [3, 0.2, 0]], [-1.82387, [3, -0.2, 0], [3, 0.2, 0]], [-1.82387, [3, -0.2, 0], [3, 0.2, 0]], [-1.82387, [3, -0.2, 0], [3, 0.186667, 0]], [-1.82387, [3, -0.186667, 0], [3, 0.253333, 0]], [0.053648, [3, -0.253333, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([1.92, 2.48, 3.04, 3.64, 4.24, 4.84, 5.4, 6.16])
keys.append([[1.19555, [3, -0.64, 0], [3, 0.186667, 0]], [1.40674, [3, -0.186667, 0], [3, 0.186667, 0]], [0.933751, [3, -0.186667, 0], [3, 0.2, 0]], [1.19555, [3, -0.2, 0], [3, 0.2, 0]], [1.19555, [3, -0.2, 0], [3, 0.2, 0]], [1.40674, [3, -0.2, 0], [3, 0.186667, 0]], [0.933751, [3, -0.186667, 0.183314], [3, 0.253333, -0.248783]], [0.110447, [3, -0.253333, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([1.92, 2.48, 3.04, 3.64, 4.24, 4.84, 5.4, 6.16])
keys.append([[1.08734, [3, -0.64, 0], [3, 0.186667, 0]], [1.08734, [3, -0.186667, 0], [3, 0.186667, 0]], [1.08734, [3, -0.186667, 0], [3, 0.2, 0]], [1.08734, [3, -0.2, 0], [3, 0.2, 0]], [1.08734, [3, -0.2, 0], [3, 0.2, 0]], [1.08734, [3, -0.2, 0], [3, 0.186667, 0]], [1.08734, [3, -0.186667, 0], [3, 0.253333, 0]], [1.69045, [3, -0.253333, 0], [3, 0, 0]]])

names.append("RHand")
times.append([1.92, 2.48, 3.04, 3.64, 4.24, 4.84, 5.4, 6.16])
keys.append([[0.95, [3, -0.64, 0], [3, 0.186667, 0]], [0.95, [3, -0.186667, 0], [3, 0.186667, 0]], [0.95, [3, -0.186667, 0], [3, 0.2, 0]], [0.95, [3, -0.2, 0], [3, 0.2, 0]], [0.95, [3, -0.2, 0], [3, 0.2, 0]], [0.95, [3, -0.2, 0], [3, 0.186667, 0]], [0.95, [3, -0.186667, 0], [3, 0.253333, 0]], [0.670475, [3, -0.253333, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([1.92, 2.48, 3.04, 3.64, 4.24, 4.84, 5.4, 6.16])
keys.append([[1.26885, [3, -0.64, 0], [3, 0.186667, 0]], [1.26885, [3, -0.186667, 0], [3, 0.186667, 0]], [1.26885, [3, -0.186667, 0], [3, 0.2, 0]], [1.26885, [3, -0.2, 0], [3, 0.2, 0]], [1.26885, [3, -0.2, 0], [3, 0.2, 0]], [1.26885, [3, -0.2, 0], [3, 0.186667, 0]], [1.26885, [3, -0.186667, 0], [3, 0.253333, 0]], [1.73186, [3, -0.253333, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([1.92, 2.48, 3.04, 3.64, 4.24, 4.84, 5.4, 6.16])
keys.append([[-0.205949, [3, -0.64, 0], [3, 0.186667, 0]], [-0.363028, [3, -0.186667, 0], [3, 0.186667, 0]], [-0.205949, [3, -0.186667, 0], [3, 0.2, 0]], [-0.205949, [3, -0.2, 0], [3, 0.2, 0]], [-0.205949, [3, -0.2, 0], [3, 0.2, 0]], [-0.363028, [3, -0.2, 0], [3, 0.186667, 0]], [-0.205949, [3, -0.186667, -0.0409249], [3, 0.253333, 0.0555409]], [-0.0736311, [3, -0.253333, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([1.92, 2.48, 3.04, 3.64, 4.24, 4.84, 5.4, 6.16])
keys.append([[1.82387, [3, -0.64, 0], [3, 0.186667, 0]], [1.82387, [3, -0.186667, 0], [3, 0.186667, 0]], [1.82387, [3, -0.186667, 0], [3, 0.2, 0]], [1.82387, [3, -0.2, 0], [3, 0.2, 0]], [1.82387, [3, -0.2, 0], [3, 0.2, 0]], [1.82387, [3, -0.2, 0], [3, 0.186667, 0]], [1.82387, [3, -0.186667, 0], [3, 0.253333, 0]], [-0.0399261, [3, -0.253333, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
