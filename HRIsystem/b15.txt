# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[-0.381962, [3, -0.333333, 0], [3, 0.413333, 0]], [-0.381962, [3, -0.413333, 0], [3, 0.96, 0]], [-0.381962, [3, -0.96, 0], [3, 0.466667, 0]], [-0.381962, [3, -0.466667, 0], [3, 0.4, 0]], [-0.385029, [3, -0.4, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[0.0214758, [3, -0.333333, 0], [3, 0.413333, 0]], [0.0214758, [3, -0.413333, 0], [3, 0.96, 0]], [0.0214758, [3, -0.96, 0], [3, 0.466667, 0]], [0.0214758, [3, -0.466667, 0], [3, 0.4, 0]], [0.0153399, [3, -0.4, 0], [3, 0, 0]]])

names.append("HipPitch")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[0.00460196, [3, -0.333333, 0], [3, 0.413333, 0]], [0.00460196, [3, -0.413333, 0], [3, 0.96, 0]], [0.00460196, [3, -0.96, 0], [3, 0.466667, 0]], [0.00460196, [3, -0.466667, 0], [3, 0.4, 0]], [0.0168738, [3, -0.4, 0], [3, 0, 0]]])

names.append("HipRoll")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[-0.0107379, [3, -0.333333, 0], [3, 0.413333, 0]], [-0.0107379, [3, -0.413333, 0], [3, 0.96, 0]], [-0.0107379, [3, -0.96, 0], [3, 0.466667, 0]], [-0.0107379, [3, -0.466667, 0], [3, 0.4, 0]], [-0.0122719, [3, -0.4, 0], [3, 0, 0]]])

names.append("KneePitch")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[-0.00306797, [3, -0.333333, 0], [3, 0.413333, 0]], [-0.00306797, [3, -0.413333, 0], [3, 0.96, 0]], [-0.00306797, [3, -0.96, 0], [3, 0.466667, 0]], [-0.00306797, [3, -0.466667, 0], [3, 0.4, 0]], [0.0214758, [3, -0.4, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([1, 2.24, 3.6, 5.12, 6.52, 7.72])
keys.append([[-0.0153399, [3, -0.333333, 0], [3, 0.413333, 0]], [-1.29161, [3, -0.413333, 0], [3, 0.453333, 0]], [-0.825541, [3, -0.453333, 0], [3, 0.506667, 0]], [-1.29161, [3, -0.506667, 0], [3, 0.466667, 0]], [-0.0153399, [3, -0.466667, 0], [3, 0.4, 0]], [-0.127321, [3, -0.4, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[-2.08162, [3, -0.333333, 0], [3, 0.413333, 0]], [-1.59687, [3, -0.413333, 0], [3, 0.96, 0]], [-1.59687, [3, -0.96, 0], [3, 0.466667, 0]], [-2.08162, [3, -0.466667, 0], [3, 0.4, 0]], [-2.08161, [3, -0.4, 0], [3, 0, 0]]])

names.append("LHand")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[0.958699, [3, -0.333333, 0], [3, 0.413333, 0]], [0.826011, [3, -0.413333, 0], [3, 0.96, 0]], [0.826011, [3, -0.96, 0], [3, 0.466667, 0]], [0.958699, [3, -0.466667, 0], [3, 0.4, 0]], [0.681898, [3, -0.4, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[1.08146, [3, -0.333333, 0], [3, 0.413333, 0]], [0.981748, [3, -0.413333, 0], [3, 0.96, 0]], [0.981748, [3, -0.96, 0], [3, 0.466667, 0]], [1.08146, [3, -0.466667, -0.0997089], [3, 0.4, 0.0854648]], [1.7472, [3, -0.4, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[0.0168738, [3, -0.333333, 0], [3, 0.413333, 0]], [0.0184078, [3, -0.413333, 0], [3, 0.96, 0]], [0.0184078, [3, -0.96, 0], [3, 0.466667, 0]], [0.0168738, [3, -0.466667, 0], [3, 0.4, 0]], [0.0935729, [3, -0.4, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[-0.799256, [3, -0.333333, 0], [3, 0.413333, 0]], [-0.090548, [3, -0.413333, 0], [3, 0.96, 0]], [-0.090548, [3, -0.96, 0], [3, 0.466667, 0]], [-0.799256, [3, -0.466667, 0], [3, 0.4, 0]], [0.0199001, [3, -0.4, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([1, 2.24, 3.6, 5.12, 6.52, 7.72])
keys.append([[0.0138059, [3, -0.333333, 0], [3, 0.413333, 0]], [1.29468, [3, -0.413333, 0], [3, 0.453333, 0]], [0.825541, [3, -0.453333, 0], [3, 0.506667, 0]], [1.29468, [3, -0.506667, 0], [3, 0.466667, 0]], [0.0138059, [3, -0.466667, 0], [3, 0.4, 0]], [0.121185, [3, -0.4, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[2.08008, [3, -0.333333, 0], [3, 0.413333, 0]], [1.60608, [3, -0.413333, 0], [3, 0.96, 0]], [1.60608, [3, -0.96, 0], [3, 0.466667, 0]], [2.08008, [3, -0.466667, -0.00357323], [3, 0.4, 0.00306277]], [2.08315, [3, -0.4, 0], [3, 0, 0]]])

names.append("RHand")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[0.913884, [3, -0.333333, 0], [3, 0.413333, 0]], [0.826889, [3, -0.413333, 0], [3, 0.96, 0]], [0.826889, [3, -0.96, 0], [3, 0.466667, 0]], [0.913884, [3, -0.466667, 0], [3, 0.4, 0]], [0.679262, [3, -0.4, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[1.08606, [3, -0.333333, 0], [3, 0.413333, 0]], [0.992485, [3, -0.413333, 0], [3, 0.96, 0]], [0.992485, [3, -0.96, 0], [3, 0.466667, 0]], [1.08606, [3, -0.466667, -0.0935741], [3, 0.4, 0.0802064]], [1.71652, [3, -0.4, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[-0.0107379, [3, -0.333333, 0], [3, 0.413333, 0]], [-0.0122719, [3, -0.413333, 0], [3, 0.96, 0]], [-0.0122719, [3, -0.96, 0], [3, 0.466667, 0]], [-0.0107379, [3, -0.466667, 0], [3, 0.4, 0]], [-0.0644271, [3, -0.4, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([1, 2.24, 5.12, 6.52, 7.72])
keys.append([[0.812978, [3, -0.333333, 0], [3, 0.413333, 0]], [0.0827939, [3, -0.413333, 0], [3, 0.96, 0]], [0.0827939, [3, -0.96, 0], [3, 0.466667, 0]], [0.812978, [3, -0.466667, 0], [3, 0.4, 0]], [-0.00464392, [3, -0.4, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
